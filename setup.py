# coding: utf-8
#
#   Copyright (C) 2012 Denis Laxalde <denis@laxalde.org>
#
#   Licensed under the GNU GPL version 3 or higher.
#

import os, subprocess

VERSION = '0.1.0'

def write_version_file(version, filename='codelib/version.py'):
    content = """\
# GENERATED BY SETUP.PY
__version__ = '%(version)s'
"""
    with open(filename, 'w') as f:
        f.write(content % {'version': version})

def get_version(ver=''):
    if not os.path.isdir(".git"):
        print('Not a git repository, using standard version.')
    try:
        ver = subprocess.check_output(["git", "describe", "--always"])
    except subprocess.CalledProcessError:
        print('Error calling git.')
    else:
        ver = ver.rstrip('\n')

    write_version_file(ver)

    return ver

def configuration(parent_package=None, top_path='codelib'):
    from numpy.distutils.misc_util import Configuration
    config = Configuration('codelib', parent_package, top_path)
    # nleq1 extension module
    src = ['nleq1.pyf', 'nleq1.f', 'wnorm.f',
           'zibconst.f', 'zibmon.f', 'zibsec.f']
    config.add_extension('_nleq1',
                         libraries=['lapack', 'blas'],
                         sources=[os.path.join(top_path, 'nleq1', s) for s in src])

    # nleq1s extension module
    src_common = ['nleq1s.pyf', 'nleq1s.f', 'wnorm.f', 'zibconst.f',
                  'zibsec.f', 'zibmon.f']
    # with Y12M
    #src = src_common + ['y12m_interface.f', 'linalg_nleq1s.f']
    #lib = []
    #incl = []
    # with UMFPACK
    src = src_common + ['umfpack_interface.c']
    lib = ['umfpack', 'amd']
    incl = ['/usr/include/suitesparse']
    config.add_extension('_nleq1s',
                         sources=[os.path.join(top_path, 'nleq1s', s) for s in src],
                         libraries=lib + ['lapack', 'blas'],
                         include_dirs=incl)

    return config

if __name__ == "__main__":
    from numpy.distutils.core import setup
    setup(version=get_version(VERSION),
          author='Denis Laxalde',
          author_email='denis@laxalde.org',
          url='https://gitorious.org/python-codelib',
          description='Interface to CodeLib scientific computing library',
          long_description='''
CodeLib (http://www.zib.de/en/numerik/software/codelib.html) is a collection of
algorithms for applications in the area of Scientific Computing developed by
the Konrad-Zuse-Zentrum fur Informationstechnik (ZIB).
'''.lstrip(),
          classifiers=['Development Status :: 4 - Beta',
                       'Intended Audience :: Science/Research',
                       'Intended Audience :: Developers',
                       'License :: OSI Approved :: '
                        'GNU General Public License v3 or later (GPLv3+)',
                       'Operating System :: OS Independent',
                       'Programming Language :: Python',
                       'Topic :: Scientific/Engineering',
                       'Topic :: Software Development :: Libraries'
                       ],
          license='GPL-3+',
          packages=['codelib'],
          configuration=configuration,
          requires=["numpy", "scipy (>= 0.11)"],
         )
